"""add_vip_functionality

Revision ID: add_vip_functionality
Revises: b7b304b64075
Create Date: 2025-01-13 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'add_vip_functionality'
down_revision = 'b7b304b64075'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create vip_config table
    op.create_table('vip_config',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('vip_price', sa.Numeric(precision=10, scale=2), nullable=False, comment='VIP年费价格'),
        sa.Column('vip_duration_days', sa.Integer(), nullable=False, comment='VIP时长（天）'),
        sa.Column('auto_upgrade', sa.Boolean(), nullable=False, comment='是否自动升级为VIP'),
        sa.Column('min_vip_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='成为VIP的最小捐赠金额'),
        sa.Column('cumulative_upgrade', sa.Boolean(), nullable=False, comment='是否支持累计捐赠升级VIP'),
        sa.Column('vip_title', sa.String(length=100), nullable=False, comment='VIP称号'),
        sa.Column('vip_description', sa.Text(), nullable=True, comment='VIP说明'),
        sa.Column('enabled', sa.Boolean(), nullable=False, comment='是否启用VIP功能'),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Add VIP-related columns to users table
    # SQLite doesn't support adding NOT NULL columns with default values directly
    # We need to do this in steps: add nullable column, update values, then make it NOT NULL
    
    # Step 1: Add the columns as nullable
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_vip_user', sa.Boolean(), nullable=True, comment='是否为VIP用户'))
        batch_op.add_column(sa.Column('vip_expire_time', sa.DateTime(), nullable=True, comment='VIP到期时间'))
        batch_op.add_column(sa.Column('total_donation', sa.Numeric(precision=10, scale=2), nullable=True, comment='累计捐赠金额'))
    
    # Step 2: Update existing records with default values
    op.execute("UPDATE users SET is_vip_user = 0 WHERE is_vip_user IS NULL")
    op.execute("UPDATE users SET total_donation = 0.00 WHERE total_donation IS NULL")
    
    # Step 3: Make the boolean and numeric columns NOT NULL
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('is_vip_user', nullable=False)
        batch_op.alter_column('total_donation', nullable=False)
    
    # Insert default VIP configuration
    op.execute("""
        INSERT INTO vip_config (
            vip_price, vip_duration_days, auto_upgrade, min_vip_amount, 
            cumulative_upgrade, vip_title, vip_description, enabled,
            created_at, updated_at
        ) VALUES (
            30.00, 365, 1, 30.00, 1, 'VIP会员', 
            '感谢您的支持！VIP会员享有更好的服务体验。', 1,
            datetime('now'), datetime('now')
        )
    """)
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Remove VIP-related columns from users table
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('total_donation')
        batch_op.drop_column('vip_expire_time')
        batch_op.drop_column('is_vip_user')
    
    # Drop vip_config table
    op.drop_table('vip_config')
    
    # ### end Alembic commands ###